gather(preytype,count,Centropages_spp:Unknown,factor_key = TRUE) %>%
filter(count != 0)
setwd("/Users/jaxinewolfe/Documents/Research/PEP/NESLTER/Data/LlopizLab/CCA/FSCSTables_SVSTA/")
# create list of files in the working directory
file_list <- list.files()
# Define columns to be extracted from fisheries data
FSCScols <- c("CRUISE6", "STATION", "EST_YEAR", "EST_MONTH", "EST_DAY", "EST_TIME",
"GMT_YEAR", "GMT_MONTH", "GMT_DAY", "GMT_TIME", "SURFTEMP", "BOTTEMP")
# Creates merged dataset from the fisheries data
for (i in 2:length(file_list)){
FSCSdataset <- read.csv(file_list[1], header = TRUE) %>%
select(FSCScols)
# create temporary dataset to ammend the FSCSdataset
temp_dataset <-read.csv(file_list[i], header = TRUE) %>%
select(FSCScols)
FSCSdataset <- rbind(FSCSdataset, temp_dataset[, colnames(FSCSdataset)])
FSCSdataset[is.na(FSCSdataset)] <- "NA" # convert empties to NA
rm(temp_dataset)
}
# Adjust Time column of dietdata: convert to %H:%M format
# Rewrite time column in diet dataset
dietdata$Time <- format(as.POSIXct(str_pad(dietdata$Time, 4, pad = "0"),
format="%H%M", origin = ""), "%H:%M")
# Merge datasets
# use unique to remove duplicate rows
diet_join <- unique(left_join(x = dietdata, y = FSCSdataset,
by = c("Cruise" = "CRUISE6", "Station" = "STATION")))
View(diet_join)
# add column with datetime
diet_join$GMT_datetime <- with(diet_join, ymd_hms(paste(GMT_YEAR, GMT_MONTH, GMT_DAY, GMT_TIME, sep= ' '),
tz = "GMT"))
diet_join$EST_datetime <- with(diet_join, ymd_hms(paste(EST_YEAR, EST_MONTH, EST_DAY, EST_TIME, sep= ' '),
tz = "EDT"))
# eliminate rows with NA for datetime (25 total)
diet_join <- diet_join[complete.cases(diet_join[ , "GMT_datetime"]),]
diet_join$EST_datetime <- with(diet_join, ymd_hms(paste(EST_YEAR, EST_MONTH, EST_DAY, EST_TIME, sep= ' '),
tz = "EST"))
# function creates a vector indicating day vs. night based on sunrise and sunset
# requires that data frame have Longitude, Latitude, and datetime columns
daynight <- function(x) {
crds <- SpatialPoints(matrix(c(x$Longitude, x$Latitude), ncol = 2, byrow = TRUE),
proj4string=CRS("+proj=longlat +datum=WGS84"))
ts <- x$GMT_datetime
sunrise <- sunriset(crds, ts, POSIXct.out = TRUE,
direction = "sunrise")$time
sunset <- sunriset(crds, ts, POSIXct.out = TRUE,
direction = "sunset")$time
# use 'ifelse'  to create vector indicating day vs. night based on sunrise and sunset
day_night <- ifelse(ts >= sunrise & ts <= sunset,
yes = "Day", no = "Night")
return(day_night)
}
daynight(diet_join)
# function creates a vector indicating day vs. night based on sunrise and sunset
# requires that data frame have Longitude, Latitude, and datetime columns
daynight <- function(x) {
crds <- SpatialPoints(matrix(c(x$Longitude, x$Latitude), ncol = 2, byrow = TRUE),
proj4string=CRS("+proj=longlat +datum=WGS84"))
ts <- x$GMT_datetime
sunrise <- sunriset(crds, ts, POSIXct.out = TRUE,
direction = "sunrise")$time
sunset <- sunriset(crds, ts, POSIXct.out = TRUE,
direction = "sunset")$time
# use 'ifelse'  to create vector indicating day vs. night based on sunrise and sunset
day_night <- ifelse(ts >= sunrise & ts <= sunset,
yes = "Day", no = "Night")
print(sunrise)
print(sunset)
return(day_night)
}
daynight(diet_join)
# add daynight column to dataset in order to compare observations
diet_join$day_night <- daynight(diet_join)
diet_join <- diet_join[complete.cases(diet_join[ , "day_night"]),]
unique(diet_join$day_night)
# function creates a vector indicating day vs. night based on sunrise and sunset
# requires that data frame have Longitude, Latitude, and datetime columns
daynight <- function(x) {
crds <- SpatialPoints(matrix(c(x$Longitude, x$Latitude), ncol = 2, byrow = TRUE),
proj4string=CRS("+proj=longlat +datum=WGS84"))
ts <- x$EST_datetime
sunrise <- sunriset(crds, ts, POSIXct.out = TRUE,
direction = "sunrise")$time
sunset <- sunriset(crds, ts, POSIXct.out = TRUE,
direction = "sunset")$time
# use 'ifelse'  to create vector indicating day vs. night based on sunrise and sunset
day_night <- ifelse(ts >= sunrise & ts <= sunset,
yes = "Day", no = "Night")
print(sunrise)
print(sunset)
return(day_night)
}
# add daynight column to dataset in order to compare observations
diet_join$day_night <- daynight(diet_join)
diet_join <- diet_join[complete.cases(diet_join[ , "day_night"]),]
unique(diet_join$day_night)
## Define Seasons ##
diet_join$seasons <- ifelse((diet_join$EST_MONTH == 3 | diet_join$EST_MONTH == 4 |
diet_join$EST_MONTH == 5), yes = "Spring", no = "Fall")
diet_join[76:79,]
test <- diet_join[76:79,]
View(test)
# Aggregate data based on groupings of explanatory variables
dietsp <- diet_join %>%
group_by(Region,day_night, seasons, Station_Depth,SURFTEMP,BOTTEMP) %>%
# Create species-specific data frame
filter(Species == "A. aestivalis") %>%
summarise_at(vars(Centropages_spp:Unknown), sum) %>%
mutate(preytotal = rowSums(.[,"Centropages_spp":ncol(.)]), na.rm = TRUE)
# Aggregate data based on groupings of explanatory variables
dietsp <- diet_join %>%
group_by(Region,day_night, seasons, Station_Depth,SURFTEMP,BOTTEMP) %>%
# Create species-specific data frame
filter(Species == "A. aestivalis") %>%
summarise_at(vars(Centropages_spp:Unknown), sum)
View(dietsp)
# this transformation is common in diet studies for proportion
trans.arcsine <- function(x){
asin(sign(x) * sqrt(abs(x)))
}
# isolate predictors
predictors <- select(dietsp, c("Region","day_night","seasons","Station_Depth", "SURFTEMP","BOTTEMP"))
# isolate diet info
prey <- dietsp[,7:ncol(dietsp)]
# create vector of prey count totals per row
preytotal <- rowSums(prey)
preytotal
# convert counts to proportions
preyprop <- prey/preytotal
preyprop
preyprop[preyprop == "NaN"] <- 0
# transform proportions using arcsin
preyarc <- trans.arcsine(preyprop)
# CCA
# create a "full" model with all predictors
# y ~ x
# the dot means "any columns from data that are otherwise not used"
# Note: none of the rowsums can equal zero
CCA_full <- cca(preyarc~., predictors)
# make a null model
CCA_null <- cca(preyarc~1,predictors)
# perform a stepwise selection of predictors through permuatation tests against the null model
CCA_final <- step(CCA_null, scope = formula(CCA_full), test = "perm", perm.max = 100)
# plot the results
# tiff("B_saida_CCA_190201.tiff",width = 8, height = 6, res = 200, units = "in")
plot(CCA_final, display = c("sp","bp"))
View(predictors)
CCA_final
CCA_final$rowsum
# manually added a preytype_validated column for ease of GNR
lookup <- read_csv("Llopiz_preytypes.csv")
# manually added a preytype_validated column for ease of GNR
lookup <- read_csv("preytype_lookup.csv")
# Set working directory
setwd("/Users/jaxinewolfe/Documents/Research/PEP/NESLTER/Data/LlopizLab/Abundance")
# manually added a preytype_validated column for ease of GNR
lookup <- read_csv("preytype_lookup.csv")
View(lookup)
# Load Justin data
# rename as diet_Justin
preytype_Justin <- read_csv("classify_Forage_Fish_Diet_Data_2013_2015_Final_long.csv")
# Isolate and clean preytype
preytype_Justin$preytype <- trimws(gsub('([[:upper:]])', ' \\1',
preytype_Justin$preytype))
View(preytype_Justin)
# repeat for Sarahs data
# rename as diet_Sarah
preytype_Sarah <- read_csv("classify_LTER201802StomachData_LTERFFSizes.csv")
preytype_Sarah$PreySpecies <- trimws(gsub('([[:upper:]])', ' \\1',
preytype_Sarah$PreySpecies))
View(preytype_Sarah)
which(lookup$Llopiz_preytypes == preytype_Justin$preytype)
which(lookup$Llopiz_preytypes == preytype_Justin$preytype, arr.ind == T)
which(lookup$Llopiz_preytypes == preytype_Justin$preytype, arr.ind = T)
which(lookup$Llopiz_preytypes == preytype_Justin$preytype, arr.ind = F)
lookup$Llopiz_preytypes[lookup$preytype_validated]
lookup$Llopiz_preytypes[which(lookup$preytype_validated)]
lookup$Llopiz_preytypes %in% preytype_Justin$preytype
preytype_Justin$preytype %in% lookup$Llopiz_preytypes
which(preytype_Justin$preytype %in% lookup$Llopiz_preytypes)
lookup[preytype_Justin$preytype %in% lookup$Llopiz_preytypes, ]
lookup$preytype_validated[preytype_Justin$preytype %in% lookup$Llopiz_preytypes, ]
View(preytype_Justin)
lookup$preytype_validated[which(preytype_Justin$preytype %in% lookup$Llopiz_preytypes), ]
lookup[which(preytype_Justin$preytype %in% lookup$Llopiz_preytypes), ]
which(preytype_Justin$preytype %in% lookup$Llopiz_preytypes)
lookup$Llopiz_preytypes[preytype_Justin$preytype %in% lookup$Llopiz_preytypes, ]
preytype_Justin$preytype[1] %in% lookup$Llopiz_preytypes
which(preytype_Justin$preytype[1] %in% lookup$Llopiz_preytypes)
which(preytype_Justin$preytype[2] %in% lookup$Llopiz_preytypes)
which(preytype_Justin$preytype[246] %in% lookup$Llopiz_preytypes)
lookup$Llopiz_preytypes[which(preytype_Justin$preytype[246] %in% lookup$Llopiz_preytypes), ]
lookup[which(preytype_Justin$preytype[246] %in% lookup$Llopiz_preytypes), ]
lookup[which(preytype_Justin$preytype[1] %in% lookup$Llopiz_preytypes), ]
which(preytype_Justin$preytype==lookup$Llopiz_preytypes, arr.ind = T)
which(preytype_Justin$preytype==lookup$Llopiz_preytypes, arr.ind = T)
which(preytype_Justin$preytype[2] %in% lookup$Llopiz_preytypes)[1]
which(preytype_Justin$preytype[2] %in% lookup$Llopiz_preytypes)[1]
which(preytype_Justin$preytype[249] %in% lookup$Llopiz_preytypes)[1]
which(preytype_Justin$preytype[249] %in% lookup$Llopiz_preytypes)[3]
which(preytype_Justin$preytype[249] %in% lookup$Llopiz_preytypes)[2]
lookup[which(preytype_Justin$preytype[249] %in% lookup$Llopiz_preytypes),]
lookup[which(preytype_Justin$preytype[249] %in% lookup$Llopiz_preytypes),2]
lookup[which(preytype_Justin$preytype[249] %in% lookup$Llopiz_preytypes),"preytype_validated"]
as.vector(lookup[which(preytype_Justin$preytype[249] %in% lookup$Llopiz_preytypes),"preytype_validated"])
preytype_Justin$prey_valid <- NA_character_
# prey.lookup <- function(key,lookup) {
for(i in 1:nrow(preytype_Justin)) {
if (preytype_Justin$preytype[i] %in% lookup$Llopiz_preytypes == TRUE) {
preymatch <- lookup[which(preytype_Justin$preytype[249] %in%
lookup$Llopiz_preytypes),"preytype_validated"]
preytype_Justin$prey_valid[i] <<- preymatch
}
}
nrow(preytype_Justin)
# prey.lookup <- function(key,lookup) {
for(i in 1:nrow(preytype_Justin)) {
if (preytype_Justin$preytype[i] %in% lookup$Llopiz_preytypes == TRUE) {
preymatch <- lookup[which(preytype_Justin$preytype[249] %in%
lookup$Llopiz_preytypes),"preytype_validated"]
preytype_Justin$prey_valid[i] <<- preymatch
}
}
# prey.lookup <- function(key,lookup) {
for(i in 1:nrow(preytype_Justin)) {
if (preytype_Justin$preytype[i] %in% lookup$Llopiz_preytypes == TRUE) {
preymatch <- lookup[which(preytype_Justin$preytype[249] %in% lookup$Llopiz_preytypes),"preytype_validated"]
preytype_Justin$prey_valid[i] <<- preymatch
}
}
namespace_path <- "/Users/jaxinewolfe/Documents/Research/PEP/NESLTER/Data/LlopizLab/Abundance/namespace_validation"
read_csv("Llopiz_resolved.csv", namespace_path)
setwd(namespace_path)
read_csv("Llopiz_resolved.csv")
itis_prey <- read_csv("Llopiz_resolved.csv")
View(itis_prey)
diet_Justin <- left_join(x = preytype_Justin, y = itis_prey,
by=c(("preytype" = "Llopiz_preytypes")))
diet_Justin <- left_join(x = preytype_Justin, y = itis_prey,
by=c(("preytype" == "Llopiz_preytypes")))
diet_Justin <- left_join(x = preytype_Justin, y = itis_prey,
by=(c("Llopiz_preytypes"="preytype")))
diet_Justin <- left_join(x = preytype_Justin, y = itis_prey,
by=(c("preytype"="Llopiz_preytypes")))
View(diet_Justin)
diet_Sarah <- left_join(x = preytype_Sarah, y = itis_prey,
by=(c("PreySpecies"="Llopiz_preytypes")))
View(diet_Sarah)
# Generate summary sheet with prey totals per Cruise_Station_FishSpecies
sca_preytot <- diet_Justin %>%
filter(count != "NA") %>%
group_by(Cruise, Station, Species, preytype_validated) %>%
# add prey items across fish from the same cruise and station
summarize(PreyTotal = sum(count))
# Generate summary sheet with prey totals per Cruise_Station_FishSpecies
sca_preytot <- diet_Justin %>%
# filter(count != "NA") %>%
group_by(Cruise, Station, Species, preytype_validated) %>%
# add prey items across fish from the same cruise and station
summarize(PreyTotal = sum(count))
# Generate summary sheet with prey totals per Cruise_Station_FishSpecies
sca_preytot <- diet_Justin %>%
filter(count != "NA") %>%
group_by(Cruise, Station, Species, preytype_validated) %>%
# add prey items across fish from the same cruise and station
summarize(PreyTotal = sum(count))
View(sca_preytot)
# Generate summary sheet with prey totals per Cruise_Station_FishSpecies
sca_preytot <- diet_Justin %>%
filter(count != "NA") %>%
group_by(Cruise, Station, Species, preytype_validated) %>%
# add prey items across fish from the same cruise and station
summarize(PreyTotal = sum(count))
# Generate summary sheet with prey totals per Cruise_Station_FishSpecies
sca_preytot <- diet_Justin %>%
filter(count != "NA") %>%
group_by(Cruise, Station) %>%
# add prey items across fish from the same cruise and station
summarize(PreyTotal = sum(count))
detach("package:tidyverse", unload = TRUE)
library(tidyverse)
# Generate summary sheet with prey totals per Cruise_Station_FishSpecies
sca_preytot <- diet_Justin %>%
filter(count != "NA") %>%
group_by(Cruise, Station, Species, preytype_validated) %>%
# add prey items across fish from the same cruise and station
summarize(PreyTotal = sum(count))
# Generate summary sheet with prey totals per Cruise_Station_FishSpecies
sca_preytot <- diet_Justin %>%
filter(count != "NA") %>%
group_by(fishSpecies) %>%
# add prey items across fish from the same cruise and station
summarize(PreyTotal = sum(count))
# Generate summary sheet with prey totals per Cruise_Station_FishSpecies
sca_preytot <- diet_Justin %>%
filter(count != "NA") %>%
group_by(Species) %>%
# add prey items across fish from the same cruise and station
summarize(PreyTotal = sum(count))
# Generate summary sheet with prey totals per Cruise_Station_FishSpecies
sca_preytot <- diet_Justin %>%
filter(count != "NA") %>%
group_by(Cruise, Station, Species, preytype_validated) %>%
# add prey items across fish from the same cruise and station
summarize(PreyTotal = sum(.,count))
# Generate summary sheet with prey totals per Cruise_Station_FishSpecies
sca_preytot <- diet_Justin %>%
filter(count != "NA") %>%
group_by(Cruise, Station, Species, preytype_validated) %>%
# add prey items across fish from the same cruise and station
summarize(PreyTotal = sum(diet_Justin$count))
# Generate summary sheet with prey totals per Cruise_Station_FishSpecies
sca_preytot <- diet_Justin %>%
filter(count != "NA") %>%
group_by(Cruise, Station, Species, preytype_validated) %>%
# add prey items across fish from the same cruise and station
summarize(PreyTotal = mean(diet_Justin$count))
# Set working directory
setwd("/Users/jaxinewolfe/Documents/Research/PEP/NESLTER/Data/LlopizLab/Abundance")
# Load trial stomach content data
# Data is in long format
sca <- read_csv("LTER_SCA_trialdata.csv")
str(sca)
# Generate summary sheet with prey totals per Cruise_Station_FishSpecies
sca_preytot <- sca %>%
filter(PreyCount != "NA") %>%
group_by(Cruise, Station, FishSpecies, PreySpecies) %>%
# add prey items across fish from the same cruise and station
summarize(PreyTotal = sum(PreyCount))
detach("package:dplyr", unload = TRUE)
library(dplyr)
# Generate summary sheet with prey totals per Cruise_Station_FishSpecies
sca_preytot <- diet_Justin %>%
filter(count != "NA") %>%
group_by(Cruise, Station, Species, preytype_validated) %>%
# add prey items across fish from the same cruise and station
summarize(PreyTotal = sum(diet_Justin$count))
View(sca_preytot)
sca_percent <- sca_preytot %>%
group_by(FishSpecies) %>%
# add column for percent composition
mutate(PreyPercent = (PreyTotal/sum(PreyTotal))*100)
sca_percent <- sca_preytot %>%
group_by(Species) %>%
# add column for percent composition
mutate(PreyPercent = (PreyTotal/sum(PreyTotal))*100)
View(sca_percent)
# Generate summary sheet with prey totals per Cruise_Station_FishSpecies
sca_preytot <- diet_Justin %>%
filter(count != "NA") %>%
group_by(Cruise, Station, Species, preytype_validated) %>%
# add prey items across fish from the same cruise and station
summarize(PreyTotal = sum(count))
sca_percent <- sca_preytot %>%
group_by(Species) %>%
# add column for percent composition
mutate(PreyPercent = (PreyTotal/sum(PreyTotal))*100)
# Generate summary sheet with grand prey totals and richness
sca_summary <- sca_preytot %>%
group_by(Cruise, Station, Species) %>%
summarise(TotalCount = sum(PreyTotal),
PreyRichness = length(unique(PreySpecies)))
# Generate summary sheet with grand prey totals and richness
sca_summary <- sca_preytot %>%
group_by(Cruise, Station, Species) %>%
summarise(TotalCount = sum(PreyTotal),
PreyRichness = length(unique(preytype_validated)))
## TASK 2: GENERATE SUMMARY ANALYSES
ggplot(data = sca_preytot) +
geom_col(aes(x = Species, y = PreyTotal, fill = Species),
position = position_dodge())
# Percent composition
# remember percentages are calculated for Cruise_Station_FishSpecies
ggplot(data = sca_percent, aes(Species, PreyPercent, fill = preytype_validated)) +
geom_col() +
# scale_fill_brewer(palette = "Set3") +
labs(title = "Diet Composition Per Fish", x = "Fish Species", y = "Percent Composition") +
theme_classic()
# Generate summary sheet with prey totals per Cruise_Station_FishSpecies
sca_preytot <- diet_Justin %>%
filter(count != "NA") %>%
group_by(Cruise, Station, Species, resolved_higher_order_fromgnr) %>%
# add prey items across fish from the same cruise and station
summarize(PreyTotal = sum(count))
sca_percent <- sca_preytot %>%
group_by(Species) %>%
# add column for percent composition
mutate(PreyPercent = (PreyTotal/sum(PreyTotal))*100)
# Generate summary sheet with grand prey totals and richness
sca_summary <- sca_preytot %>%
group_by(Cruise, Station, Species) %>%
summarise(TotalCount = sum(PreyTotal),
PreyRichness = length(unique(resolved_higher_order_fromgnr)))
# Percent composition
# remember percentages are calculated for Cruise_Station_FishSpecies
ggplot(data = sca_percent, aes(Species, PreyPercent, fill = resolved_higher_order_fromgnr)) +
geom_col() +
# scale_fill_brewer(palette = "Set3") +
labs(title = "Diet Composition Per Fish", x = "Fish Species", y = "Percent Composition") +
theme_classic()
ggsave("RelAbund_v1.jpg")
itis_prey[is.na(itis_prey$resolved_higher_order_fromgnr),]
test <- itis_prey[is.na(itis_prey$resolved_higher_order_fromgnr),]
View(test)
ggsave("RelAbund_Justin.jpg")
# Generate summary sheet with prey totals per Cruise_Station_FishSpecies
sca_preytot <- diet_Sarah %>%
filter(count != "NA") %>%
group_by(Cruise, Station, FishSpecies, resolved_higher_order_fromgnr) %>%
# add prey items across fish from the same cruise and station
summarize(PreyTotal = sum(count))
unique(diet_Justin$Cruise)
# Generate summary sheet with prey totals per Cruise_Station_FishSpecies
sca_preytot <- diet_Justin %>%
filter(count != "NA" & Cruise == "201302") %>%
group_by(Station, Species, resolved_higher_order_fromgnr) %>%
# add prey items across fish from the same cruise and station
summarize(PreyTotal = sum(count))
sca_percent <- sca_preytot %>%
group_by(Species) %>%
# add column for percent composition
mutate(PreyPercent = (PreyTotal/sum(PreyTotal))*100)
# Generate summary sheet with grand prey totals and richness
sca_summary <- sca_preytot %>%
group_by(Cruise, Station, Species) %>%
summarise(TotalCount = sum(PreyTotal),
PreyRichness = length(unique(resolved_higher_order_fromgnr)))
# Percent composition
# remember percentages are calculated for Cruise_Station_FishSpecies
ggplot(data = sca_percent, aes(Species, PreyPercent, fill = resolved_higher_order_fromgnr)) +
geom_col() +
# scale_fill_brewer(palette = "Set3") +
labs(title = "Diet Composition Per Fish", x = "Fish Species", y = "Percent Composition") +
theme_classic()
ggsave("RelAbund_201302.jpg")
# Generate summary sheet with prey totals per Cruise_Station_FishSpecies
sca_preytot <- diet_Justin %>%
filter(count != "NA" & Cruise == "201402") %>%
group_by(Station, Species, resolved_higher_order_fromgnr) %>%
# add prey items across fish from the same cruise and station
summarize(PreyTotal = sum(count))
sca_percent <- sca_preytot %>%
group_by(Species) %>%
# add column for percent composition
mutate(PreyPercent = (PreyTotal/sum(PreyTotal))*100)
# Percent composition
# remember percentages are calculated for Cruise_Station_FishSpecies
ggplot(data = sca_percent, aes(Species, PreyPercent, fill = resolved_higher_order_fromgnr)) +
geom_col() +
# scale_fill_brewer(palette = "Set3") +
labs(title = "Diet Composition Per Fish", x = "Fish Species", y = "Percent Composition") +
theme_classic()
ggsave("RelAbund_201402.jpg")
# Generate summary sheet with prey totals per Cruise_Station_FishSpecies
sca_preytot <- diet_Justin %>%
filter(count != "NA" & Cruise == "201404") %>%
group_by(Station, Species, resolved_higher_order_fromgnr) %>%
# add prey items across fish from the same cruise and station
summarize(PreyTotal = sum(count))
sca_percent <- sca_preytot %>%
group_by(Species) %>%
# add column for percent composition
mutate(PreyPercent = (PreyTotal/sum(PreyTotal))*100)
# Percent composition
# remember percentages are calculated for Cruise_Station_FishSpecies
ggplot(data = sca_percent, aes(Species, PreyPercent, fill = resolved_higher_order_fromgnr)) +
geom_col() +
# scale_fill_brewer(palette = "Set3") +
labs(title = "Diet Composition Per Fish", x = "Fish Species", y = "Percent Composition") +
theme_classic()
ggsave("RelAbund_201404.jpg")
# Generate summary sheet with prey totals per Cruise_Station_FishSpecies
sca_preytot <- diet_Justin %>%
filter(count != "NA" & Cruise == "201504") %>%
group_by(Station, Species, resolved_higher_order_fromgnr) %>%
# add prey items across fish from the same cruise and station
summarize(PreyTotal = sum(count))
sca_percent <- sca_preytot %>%
group_by(Species) %>%
# add column for percent composition
mutate(PreyPercent = (PreyTotal/sum(PreyTotal))*100)
# Percent composition
# remember percentages are calculated for Cruise_Station_FishSpecies
ggplot(data = sca_percent, aes(Species, PreyPercent, fill = resolved_higher_order_fromgnr)) +
geom_col() +
# scale_fill_brewer(palette = "Set3") +
labs(title = "Diet Composition Per Fish", x = "Fish Species", y = "Percent Composition") +
theme_classic()
ggsave("RelAbund_201504.jpg")
# Generate summary sheet with prey totals per Cruise_Station_FishSpecies
sca_preytot <- diet_Justin %>%
filter(count != "NA") %>%
group_by(Cruise, Station, Species, resolved_higher_order_fromgnr) %>%
# add prey items across fish from the same cruise and station
summarize(PreyTotal = sum(count))
sca_percent <- sca_preytot %>%
group_by(Species) %>%
# add column for percent composition
mutate(PreyPercent = (PreyTotal/sum(PreyTotal))*100)
# Generate summary sheet with grand prey totals and richness
sca_summary <- sca_preytot %>%
group_by(Cruise, Station, Species) %>%
summarise(TotalCount = sum(PreyTotal),
PreyRichness = length(unique(resolved_higher_order_fromgnr)))
# Percent composition
# remember percentages are calculated for Cruise_Station_FishSpecies
ggplot(data = sca_percent, aes(Species, PreyPercent, fill = resolved_higher_order_fromgnr)) +
geom_col() +
# scale_fill_brewer(palette = "Set3") +
labs(title = "Diet Composition Per Fish", x = "Fish Species", y = "Percent Composition") +
theme_classic()
ggsave("RelAbund_total.jpg")
