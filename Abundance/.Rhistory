spread(preytype, count, fill = 0) %>%
# sum up prey totals
mutate(preytotal = select(., one_of(species)) %>%
rowSums(na.rm = TRUE)) %>%
filter(preytotal != 0) %>% # eliminate counts of zero
select(-Unknown | -Other)
dietsp <- diet_join %>%
filter(Species == fish[5]) %>%
# exlude preytypes consisting of <1% or <5% (per species per cruise)
gather(preytype, count, species) %>%
group_by(preytype) %>%
mutate(preyprop = count/sum(count)) %>%
filter(preyprop > 0.05) %>%
# filter out unknown and other categories
filter(preytype != "Unknown" | preytype != "Other") %>%
spread(preytype, count, fill = 0) %>%
# sum up prey totals
mutate(preytotal = select(., one_of(species)) %>%
rowSums(na.rm = TRUE)) %>%
filter(preytotal != 0)  # eliminate counts of zero
View(dietsp)
dietsp <- diet_join %>%
filter(Species == fish[5]) %>%
# exlude preytypes consisting of <1% or <5% (per species per cruise)
gather(preytype, count, species) %>%
group_by(preytype) %>%
mutate(preyprop = count/sum(count)) %>%
filter(preyprop > 0.05) %>%
# filter out unknown and other categories
filter(preytype != "Unknown" | preytype != "Other") %>%
spread(preytype, count, fill = 0)
dietsp <- diet_join %>%
filter(Species == fish[5]) %>%
# exlude preytypes consisting of <1% or <5% (per species per cruise)
gather(preytype, count, species) %>%
group_by(preytype) %>%
mutate(preyprop = count/sum(count)) %>%
filter(preyprop > 0.05) %>%
# filter out unknown and other categories
filter(preytype != "Unknown" | preytype != "Other")
unique(dietsp$preytype)
diet_long <- diet_join %>%
filter(Species == fish[5]) %>%
gather(preytype, count, species) %>%
group_by(preytype) %>%
summarise(preytotal = sum(count)) %>%
mutate(preyprop = count/sum(count)) %>%
filter(preyprop > 0.05)
diet_long <- diet_join %>%
filter(Species == fish[5]) %>%
gather(preytype, count, species) %>%
group_by(.,preytype) %>%
summarise(.,preytotal = sum(count)) %>%
mutate(preyprop = count/sum(count)) %>%
filter(preyprop > 0.05)
diet_long <- diet_join %>%
filter(Species == fish[5]) %>%
gather(preytype, count, species) %>%
group_by(preytype) %>%
summarise(preytotal = sum(count))
diet_long <- diet_join %>%
filter(Species == fish[5]) %>%
gather(preytype, count, species) %>%
group_by(preytype) %>%
summarise(preytotal = sum(count)) %>%
mutate(preyprop = preytotal/sum(preytotal)) %>%
filter(preyprop > 0.05) %>%
filter(preytype != "Unknown" | preytype != "Other")
diet_long <- diet_join %>%
filter(Species == fish[5]) %>%
gather(preytype, count, species) %>%
group_by(preytype) %>%
summarise(preytotal = sum(count)) %>%
mutate(preyprop = preytotal/sum(preytotal)) %>%
filter(preyprop > 0.01) %>%
filter(preytype != "Unknown" | preytype != "Other")
diet_long <- diet_join %>%
filter(Species == fish[5]) %>%
gather(preytype, count, species) %>%
group_by(preytype) %>%
summarise(preytotal = sum(count)) %>%
mutate(preyprop = preytotal/sum(preytotal)) %>%
filter(preyprop > 0.01) %>%
filter(preytype != "Unknown")
diet_long <- diet_join %>%
filter(Species == fish[5]) %>%
gather(preytype, count, species) %>%
group_by(preytype) %>%
summarise(preytotal = sum(count)) %>%
mutate(preyprop = preytotal/sum(preytotal)) %>%
filter(preyprop > 0.01) %>%
filter(preytype != "Unknown" & preytype != "Other")
dietsp <- diet_join %>%
filter(Species == fish[5]) %>%
# sum up prey totals
mutate(preytotal = select(., one_of(prey_unique)) %>%
rowSums(na.rm = TRUE)) %>%
filter(preytotal != 0) # eliminate counts of zero
# save preytypes
prey_unique <- unique(diet_long$preytype)
dietsp <- diet_join %>%
filter(Species == fish[5]) %>%
# sum up prey totals
mutate(preytotal = select(., one_of(prey_unique)) %>%
rowSums(na.rm = TRUE)) %>%
filter(preytotal != 0) # eliminate counts of zero
dietsp <- diet_join %>%
filter(Species == fish[5]) %>%
# sum up prey totals
mutate(preytotal = select(.,prey_unique) %>%
rowSums(na.rm = TRUE)) %>%
filter(preytotal != 0) # eliminate counts of zero
dietsp <- diet_join %>%
filter(Species == fish[5]) %>%
mutate(preytotal = select(prey_unique) %>%
rowSums(na.rm = TRUE)) %>%
filter(preytotal != 0) # eliminate counts of zero
dietsp <- diet_join %>%
filter(Species == fish[5]) %>%
mutate(preytotal = select(., c(prey_unique)) %>%
rowSums(na.rm = TRUE)) %>%
filter(preytotal != 0) # eliminate counts of zero
dietsp <- diet_join %>%
filter(Species == fish[5]) %>%
mutate(preytotal = select(., vars(prey_unique)) %>%
rowSums(na.rm = TRUE)) %>%
filter(preytotal != 0) # eliminate counts of zero
dietsp <- diet_join %>%
filter(Species == fish[5]) %>%
mutate(preytotal = subset(., select = prey_unique) %>%
rowSums(na.rm = TRUE)) %>%
filter(preytotal != 0) # eliminate counts of zero
dietsp <- diet_join %>%
filter(Species == fish[5]) %>%
select(prey_unique) %>%
mutate(preytotal = rowSums(na.rm = TRUE)) %>%
filter(preytotal != 0) # eliminate counts of zero
dietsp <- diet_join %>%
filter(Species == fish[5]) %>%
select(., one_of(prey_unique)) %>%
mutate(preytotal = rowSums(na.rm = TRUE)) %>%
filter(preytotal != 0) # eliminate counts of zero
dietsp <- diet_join %>%
filter(Species == fish[5]) %>%
select(one_of(prey_unique)) %>%
mutate(preytotal = rowSums(na.rm = TRUE)) %>%
filter(preytotal != 0) # eliminate counts of zero
dietsp <- diet_join %>%
filter(Species == fish[5]) %>%
select(prey_unique) %>%
mutate(preytotal = rowSums()) %>%
filter(preytotal != 0) # eliminate counts of zero
dietsp <- diet_join %>%
filter(Species == fish[5]) %>%
select(prey_unique) %>%
mutate(preytotal = rowSums(., prey_unique)) %>%
filter(preytotal != 0) # eliminate counts of zero
dietsp <- diet_join %>%
filter(Species == fish[5]) %>%
select(prey_unique) %>%
mutate(preytotal = rowSums(., na.rm = TRUE)) %>%
filter(preytotal != 0) # eliminate counts of zero
View(dietsp)
dietsp/dietsp$preytotal
# isolate prey columns and convert counts to proportions
dietprop <- dietsp/dietsp$preytotal
dietprop[dietprop == "NaN"] <- 0
dietprop
# transform proportions using trans.arcsine function
dietarc <- dietprop %>% select(-preytotal) %>%
trans.arcsine(dietprop)
# transform proportions using trans.arcsine function
dietarc <- dietprop %>% select(-preytotal)
# function will perform a transformation which is common in diet studies
# data must be in proportions
trans.arcsine <- function(x){
asin(sign(x) * sqrt(abs(x)))
}
# set explanatory variables to call
predictor_cols <- c("Region","day_night","seasons","Station_Depth", "SURFTEMP","BOTTEMP")
# filter out observations where no surface or bottom temp was recorded
diet_join <- diet_join %>% filter(!is.na(SURFTEMP) & !is.na(BOTTEMP))
# isolate unique fish species to be looped over
cruises <- unique(diet_join$Cruise)
# isolate unique fish species to be looped over
fish <- unique(diet_join$Species)
# isolate unique prey species
diet_long <- diet_join %>%
gather(preytype, count, Centropages_spp:Unknown)
species <- unique(diet_long$preytype)
# loop through fish species
# run CCA and plot a figure based on the model output
for (i in 1:length(fish)) {
diet_include <- diet_join %>%
# exlude preytypes consisting of <1% or <5% (per species per cruise)
filter(Species == fish[i]) %>%
gather(preytype, count, species) %>%
group_by(preytype) %>%
summarise(preytotal = sum(count)) %>%
mutate(preyprop = preytotal/sum(preytotal)) %>%
filter(preyprop > 0.01) %>%
filter(preytype != "Unknown" & preytype != "Other")
# save preytypes
prey_unique <- unique(diet_include$preytype)
# summarize total prey counts per fish gut
dietsp <- diet_join %>%
filter(Species == fish[i]) %>%
select(prey_unique) %>%
mutate(preytotal = rowSums(., na.rm = TRUE)) %>%
filter(preytotal != 0) # eliminate counts of zero
# isolate prey columns and convert counts to proportions
dietprop <- dietsp/dietsp$preytotal
dietprop[dietprop == "NaN"] <- 0
dietprop <- dietprop %>% select(-preytotal)
# transform proportions using trans.arcsine function
dietarc <- trans.arcsine(dietprop)
# isolate predictors
predictors <- subset(dietsp, select = predictor_cols)
# convert categorical explanatory variables to numerical assignments
predictors$Region <- as.numeric(factor(predictors$Region))
predictors$day_night <- as.numeric(factor(predictors$day_night))
predictors$seasons <- as.numeric(factor(predictors$seasons))
## CCA model
# Make sure none of the columns contain one category (i.e. all Spring)
# create a "full" model with all predictors
CCA_full <- cca(dietarc~., predictors)
# make a null model
CCA_null <- cca(dietarc~1,predictors)
# perform a stepwise selection of predictors through permuatation tests against the null model
CCA_final <- step(CCA_null, scope = formula(CCA_full), test = "perm", perm.max = 100)
# prepare to save plots to working directory
tiff(paste0("CCA_", fish[i], ".tiff"),
width = 8, height = 6, res = 200, units = "in")
# plot the results
# https://www.rdocumentation.org/packages/vegan/versions/2.4-2/topics/plot.cca
plot(CCA_final, display = c("sp","bp"))
dev.off() # shuts down current device
}
dietsp <- diet_join %>%
filter(Species == fish[5]) %>%
# select(prey_unique) %>%
mutate(preytotal = select(., prey_unique) %>% rowSums(na.rm = TRUE)) %>%
filter(preytotal != 0)
View(dietsp)
!(species %in% diet_include$preytype)
species[!(species %in% diet_include$preytype)]
# save preytypes
prey_outside <- species[!(species %in% diet_include$preytype)]
dietsp <- diet_join %>%
filter(Species == fish[5]) %>%
select(-prey_outside) %>%
mutate(preytotal = rowSums(na.rm = TRUE)) %>%
filter(preytotal != 0)
# save preytypes
prey_inside <- unique(diet_include$preytype)
dietsp <- diet_join %>%
filter(Species == fish[5]) %>%
select(-prey_outside) %>%
mutate(preytotal = select(., prey_inside) %>% rowSums(na.rm = TRUE)) %>%
filter(preytotal != 0) # eliminate counts of zero
View(dietsp)
select(dietsp, prey_inside)/dietsp$preytotal
# function will perform a transformation which is common in diet studies
# data must be in proportions
trans.arcsine <- function(x){
asin(sign(x) * sqrt(abs(x)))
}
# set explanatory variables to call
predictor_cols <- c("Region","day_night","seasons","Station_Depth", "SURFTEMP","BOTTEMP")
# filter out observations where no surface or bottom temp was recorded
diet_join <- diet_join %>% filter(!is.na(SURFTEMP) & !is.na(BOTTEMP))
# isolate unique fish species to be looped over
cruises <- unique(diet_join$Cruise)
# isolate unique fish species to be looped over
fish <- unique(diet_join$Species)
# isolate unique prey species
diet_long <- diet_join %>%
gather(preytype, count, Centropages_spp:Unknown)
species <- unique(diet_long$preytype)
# loop through fish species
# run CCA and plot a figure based on the model output
for (i in 1:length(fish)) {
diet_include <- diet_join %>%
# exlude preytypes consisting of <1% or <5% (per species per cruise)
filter(Species == fish[i]) %>%
gather(preytype, count, species) %>%
group_by(preytype) %>%
summarise(preytotal = sum(count)) %>%
mutate(preyprop = preytotal/sum(preytotal)) %>%
filter(preyprop > 0.01) %>%
filter(preytype != "Unknown" & preytype != "Other")
# save preytypes
prey_inside <- unique(diet_include$preytype)
prey_outside <- species[!(species %in% diet_include$preytype)]
# summarize total prey counts per fish gut
dietsp <- diet_join %>%
filter(Species == fish[i]) %>%
select(-prey_outside) %>%
mutate(preytotal = select(., prey_inside) %>% rowSums(na.rm = TRUE)) %>%
filter(preytotal != 0) # eliminate counts of zero
# isolate prey columns and convert counts to proportions
dietprop <- select(dietsp, prey_inside)/dietsp$preytotal
dietprop[dietprop == "NaN"] <- 0
# transform proportions using trans.arcsine function
dietarc <- trans.arcsine(dietprop)
# isolate predictors
predictors <- subset(dietsp, select = predictor_cols)
# convert categorical explanatory variables to numerical assignments
predictors$Region <- as.numeric(factor(predictors$Region))
predictors$day_night <- as.numeric(factor(predictors$day_night))
predictors$seasons <- as.numeric(factor(predictors$seasons))
## CCA model
# Make sure none of the columns contain one category (i.e. all Spring)
# create a "full" model with all predictors
CCA_full <- cca(dietarc~., predictors)
# make a null model
CCA_null <- cca(dietarc~1,predictors)
# perform a stepwise selection of predictors through permuatation tests against the null model
CCA_final <- step(CCA_null, scope = formula(CCA_full), test = "perm", perm.max = 100)
# prepare to save plots to working directory
tiff(paste0("CCA_", fish[i], ".tiff"),
width = 8, height = 6, res = 200, units = "in")
# plot the results
# https://www.rdocumentation.org/packages/vegan/versions/2.4-2/topics/plot.cca
plot(CCA_final, display = c("sp","bp"))
dev.off() # shuts down current device
}
plot(CCA_final, display = c("sp","bp"))
# play around with output
# plot(CCA_final, display = c("sp","bp"))
# points(CCA_final, pch=19, col="black", bg="yellow", cex=1.2)
## Summary output
# Limited output of 'summary'
# head(summary(CCA_final), tail=2)
# conduct an anova
# anova(CCA_final)
# dietsp <- diet_join %>%
#   filter(Species == fish[i]) %>%
#   # exlude preytypes consisting of <1% or <5% (per species per cruise)
#   gather(preytype, count, species) %>%
#   group_by(preytype) %>%
#   mutate(preyprop = count/sum(count)) %>%
#   filter(preyprop > 0.05) %>%
#   # filter out unknown and other categories
#   filter(preytype != "Unknown" | preytype != "Other") %>%
#   spread(preytype, count, fill = 0) %>%
#   # sum up prey totals
#   mutate(preytotal = select(., one_of(species)) %>%
#            rowSums(na.rm = TRUE)) %>%
#   filter(preytotal != 0) %>% # eliminate counts of zero
#   select(-Unknown, -Other)
i
[i]
# function will perform a transformation which is common in diet studies
# data must be in proportions
trans.arcsine <- function(x){
asin(sign(x) * sqrt(abs(x)))
}
# set explanatory variables to call
predictor_cols <- c("Region","day_night","seasons","Station_Depth", "SURFTEMP","BOTTEMP")
# filter out observations where no surface or bottom temp was recorded
diet_join <- diet_join %>% filter(!is.na(SURFTEMP) & !is.na(BOTTEMP))
# isolate unique fish species to be looped over
cruises <- unique(diet_join$Cruise)
# isolate unique fish species to be looped over
fish <- unique(diet_join$Species)
# isolate unique prey species
diet_long <- diet_join %>%
gather(preytype, count, Centropages_spp:Unknown)
species <- unique(diet_long$preytype)
# loop through fish species
# run CCA and plot a figure based on the model output
for (i in 1:length(fish)) {
diet_include <- diet_join %>%
# exlude preytypes consisting of <1% (per species per cruise)
filter(Species == fish[i]) %>%
gather(preytype, count, species) %>%
group_by(preytype) %>%
summarise(preytotal = sum(count)) %>%
mutate(preyprop = preytotal/sum(preytotal)) %>%
filter(preyprop > 0.01) %>%
filter(preytype != "Unknown" & preytype != "Other")
# save preytypes above/below 1% threshold for reference
prey_inside <- unique(diet_include$preytype)
prey_outside <- species[!(species %in% diet_include$preytype)]
# summarize total prey counts per fish gut
dietsp <- diet_join %>%
filter(Species == fish[i]) %>%
select(-prey_outside) %>% # eliminate preytypes below 1% threshold
mutate(preytotal = select(., prey_inside) %>% rowSums(na.rm = TRUE)) %>%
filter(preytotal != 0) # eliminate counts of zero
# isolate prey columns and convert counts to proportions
dietprop <- select(dietsp, prey_inside)/dietsp$preytotal
dietprop[dietprop == "NaN"] <- 0
# transform proportions using trans.arcsine function
dietarc <- trans.arcsine(dietprop)
# isolate predictors
predictors <- subset(dietsp, select = predictor_cols)
# convert categorical explanatory variables to numerical assignments
predictors$Region <- as.numeric(factor(predictors$Region))
predictors$day_night <- as.numeric(factor(predictors$day_night))
predictors$seasons <- as.numeric(factor(predictors$seasons))
## CCA model
# Make sure none of the columns contain one category (i.e. all Spring)
# create a "full" model with all predictors
CCA_full <- cca(dietarc~., predictors)
# make a null model
CCA_null <- cca(dietarc~1,predictors)
# perform a stepwise selection of predictors through permuatation tests against the null model
CCA_final <- step(CCA_null, scope = formula(CCA_full), test = "perm", perm.max = 100)
# prepare to save plots to working directory
tiff(paste0("CCA_", fish[i], ".tiff"),
width = 8, height = 6, res = 200, units = "in")
# plot the results
# https://www.rdocumentation.org/packages/vegan/versions/2.4-2/topics/plot.cca
p <- plot(CCA_final, display = c("sp","bp"),
main = paste0("CCA for ", fish[i]))
dev.off() # shuts down current device
}
p
# play around with output
# plot(CCA_final, display = c("sp","bp"))
# points(CCA_final, pch=19, col="black", bg="yellow", cex=1.2)
## Summary output
# Limited output of 'summary'
# head(summary(CCA_final), tail=2)
# conduct an anova
anova(CCA_final)
## Summary output
# Limited output of 'summary'
# head(summary(CCA_final), tail=2)
# conduct an anova
anova(CCA_final)
p
plot(CCA_final, display = c("sp","bp"),
main = paste0("CCA for ", fish[5]))
# function will perform a transformation which is common in diet studies
# data must be in proportions
trans.arcsine <- function(x){
asin(sign(x) * sqrt(abs(x)))
}
# set explanatory variables to call
predictor_cols <- c("Region","day_night","seasons","Station_Depth", "SURFTEMP","BOTTEMP")
# filter out observations where no surface or bottom temp was recorded
diet_join <- diet_join %>% filter(!is.na(SURFTEMP) & !is.na(BOTTEMP))
# isolate unique fish species to be looped over
cruises <- unique(diet_join$Cruise)
# isolate unique fish species to be looped over
fish <- unique(diet_join$Species)
# isolate unique prey species
diet_long <- diet_join %>%
gather(preytype, count, Centropages_spp:Unknown)
species <- unique(diet_long$preytype)
# loop through fish species
# run CCA and plot a figure based on the model output
for (i in 1:length(fish)) {
diet_include <- diet_join %>%
# exlude preytypes consisting of <1% (per species per cruise)
filter(Species == fish[i]) %>%
gather(preytype, count, species) %>%
group_by(preytype) %>%
summarise(preytotal = sum(count)) %>%
mutate(preyprop = preytotal/sum(preytotal)) %>%
filter(preyprop > 0.01) %>%
filter(preytype != "Unknown" & preytype != "Other")
# save preytypes above/below 1% threshold for reference
prey_inside <- unique(diet_include$preytype)
prey_outside <- species[!(species %in% diet_include$preytype)]
# summarize total prey counts per fish gut
dietsp <- diet_join %>%
filter(Species == fish[i]) %>%
select(-prey_outside) %>% # eliminate preytypes below 1% threshold
mutate(preytotal = select(., prey_inside) %>% rowSums(na.rm = TRUE)) %>%
filter(preytotal != 0) # eliminate counts of zero
# isolate prey columns and convert counts to proportions
dietprop <- select(dietsp, prey_inside)/dietsp$preytotal
dietprop[dietprop == "NaN"] <- 0
# transform proportions using trans.arcsine function
dietarc <- trans.arcsine(dietprop)
# isolate predictors
predictors <- subset(dietsp, select = predictor_cols)
# convert categorical explanatory variables to numerical assignments
predictors$Region <- as.numeric(factor(predictors$Region))
predictors$day_night <- as.numeric(factor(predictors$day_night))
predictors$seasons <- as.numeric(factor(predictors$seasons))
## CCA model
# Make sure none of the columns contain one category (i.e. all Spring)
# create a "full" model with all predictors
CCA_full <- cca(dietarc~., predictors)
# make a null model
CCA_null <- cca(dietarc~1,predictors)
# perform a stepwise selection of predictors through permuatation tests against the null model
CCA_final <- step(CCA_null, scope = formula(CCA_full), test = "perm", perm.max = 100)
# prepare to save plots to working directory
tiff(paste0("CCA_", fish[i], ".tiff"),
width = 8, height = 6, res = 200, units = "in")
# plot the results
# https://www.rdocumentation.org/packages/vegan/versions/2.4-2/topics/plot.cca
plot(CCA_final, display = c("sp","bp"),
main = paste0("CCA for ", fish[i]))
dev.off() # shuts down current device
}
plot(CCA_final, display = c("sp","bp"),
main = paste0("CCA for ", fish[5]))
# play around with output
# plot(CCA_final, display = c("sp","bp"))
# points(CCA_final, pch=19, col="black", bg="yellow", cex=1.2)
## Summary output
# Limited output of 'summary'
# head(summary(CCA_final), tail=2)
# conduct an anova
anova(CCA_final)
