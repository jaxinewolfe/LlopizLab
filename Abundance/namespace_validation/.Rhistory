dietsp <- diet_join %>%
group_by(Region,day_night, seasons, Station_Depth,SURFTEMP,BOTTEMP) %>%
# Create species-specific data frame
filter(Species == "A. aestivalis" & day_night != "NA") %>%
summarise_at(vars(Centropages_spp:Unknown), sum) %>%
mutate(preytotal = rowSums(.[Centropages_spp:Unknown]))
dietsp <- diet_join %>%
group_by(Region,day_night, seasons, Station_Depth,SURFTEMP,BOTTEMP) %>%
# Create species-specific data frame
filter(Species == "A. aestivalis" & day_night != "NA") %>%
summarise_at(vars(Centropages_spp:Unknown), sum) %>%
mutate(preytotal = rowsum(Centropages_spp:Unknown))
dietsp <- diet_join %>%
group_by(Region,day_night, seasons, Station_Depth,SURFTEMP,BOTTEMP) %>%
# Create species-specific data frame
filter(Species == "A. aestivalis" & day_night != "NA") %>%
summarise_at(vars(Centropages_spp:Unknown), sum) %>%
mutate(preytotal = rowsum(.[Centropages_spp:Unknown]))
dietsp <- diet_join %>%
group_by(Region,day_night, seasons, Station_Depth,SURFTEMP,BOTTEMP) %>%
# Create species-specific data frame
filter(Species == "A. aestivalis" & day_night != "NA") %>%
summarise_at(vars(Centropages_spp:Unknown), sum) %>%
mutate(preytotal = rowsum(vars(Centropages_spp:Unknown)))
dietsp <- diet_join %>%
group_by(Region,day_night, seasons, Station_Depth,SURFTEMP,BOTTEMP) %>%
# Create species-specific data frame
filter(Species == "A. aestivalis" & day_night != "NA") %>%
summarise_at(vars(Centropages_spp:Unknown), sum) %>%
mutate(preytotal = rowsum(select(Centropages_spp:Unknown)))
dietsp <- diet_join %>%
group_by(Region,day_night, seasons, Station_Depth,SURFTEMP,BOTTEMP) %>%
# Create species-specific data frame
filter(Species == "A. aestivalis" & day_night != "NA") %>%
summarise_at(vars(Centropages_spp:Unknown), sum) %>%
mutate(preytotal = rowsum(select(vars(Centropages_spp:Unknown))))
dietsp <- diet_join %>%
group_by(Region,day_night, seasons, Station_Depth,SURFTEMP,BOTTEMP) %>%
# Create species-specific data frame
filter(Species == "A. aestivalis" & day_night != "NA") %>%
summarise_at(vars(Centropages_spp:Unknown), sum) %>%
mutate(preytotal = rowSums(select(Centropages_spp:Unknown)))
dietsp <- diet_join %>%
group_by(Region,day_night, seasons, Station_Depth,SURFTEMP,BOTTEMP) %>%
# Create species-specific data frame
filter(Species == "A. aestivalis" & day_night != "NA") %>%
summarise_at(vars(Centropages_spp:Unknown), sum) %>%
mutate(preytotal = rowSums(.data$Centropages_spp:.data$Unknown)))
dietsp <- diet_join %>%
group_by(Region,day_night, seasons, Station_Depth,SURFTEMP,BOTTEMP) %>%
# Create species-specific data frame
filter(Species == "A. aestivalis" & day_night != "NA") %>%
summarise_at(vars(Centropages_spp:Unknown), sum) %>%
mutate(preytotal = rowSums(Centropages_spp:Unknown))
dietsp <- diet_join %>%
group_by(Region,day_night, seasons, Station_Depth,SURFTEMP,BOTTEMP) %>%
# Create species-specific data frame
filter(Species == "A. aestivalis" & day_night != "NA") %>%
summarise_at(vars(Centropages_spp:Unknown), sum) %>%
mutate(preytotal = rowSums(select(.,Centropages_spp:Unknown)))
dietsp <- diet_join %>%
group_by(Region,day_night, seasons, Station_Depth,SURFTEMP,BOTTEMP) %>%
# Create species-specific data frame
filter(Species == "A. aestivalis" & day_night != "NA") %>%
summarise_at(vars(Centropages_spp:Unknown), sum) %>%
mutate(preytotal = rowSums(select(.,"Centropages_spp":"Unknown")))
dietsp <- diet_join %>%
group_by(Region,day_night, seasons, Station_Depth,SURFTEMP,BOTTEMP) %>%
# Create species-specific data frame
filter(Species == "A. aestivalis" & day_night != "NA") %>%
summarise_at(vars(Centropages_spp:Unknown), sum) %>%
mutate(preytotal = rowSums(select(.,"Centropages_spp":"Unknown")), na.rm = TRUE)
dietsp <- diet_join %>%
group_by(Region,day_night, seasons, Station_Depth,SURFTEMP,BOTTEMP) %>%
# Create species-specific data frame
filter(Species == "A. aestivalis" & day_night != "NA") %>%
summarise_at(vars(Centropages_spp:Unknown), sum) %>%
mutate(preytotal = rowSums(.[,"Centropages_spp":ncol(.)]), na.rm = TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(taxonomyCleanr)
install.packages("taxonomyCleanr")
install.packages("taxize")
library(plyr)
library(tidyverse)
man.data <- read.csv("https://raw.githubusercontent.com/jaxinewolfe/EDI-NES-LTER-2019/master/namespace_validation/20190529_classify_classlabel.csv")
View(man.data)
install.packages("worrms")
install.packages("worrms")
install.packages("taxize")
rm(list = ls())
library(tidyverse)
library(lubridate)
library(maptools)
library(mapproj)
library(raster)
library(rgeos)
library(marmap)
library(rgdal)
library(akima)
library(ncdf4)
library(sp)
library(ggmap)
library(RColorBrewer)
library(adehabitatHR)
library(oce)
library(sf)
us_map <- st_read("/Users/jaxinewolfe/Desktop/r-geospatial/data/NEON-DS-Site-Layout-Files/US-Boundary-Layers/US-State-Boundaries-Census-2014.shp")
setwd("/Users/jaxinewolfe/Google Drive/STELLWAGEN/Data_Management/S4_Automation")
dir_working <- "/Users/jaxinewolfe/Google Drive/STELLWAGEN/Data_Management/S4_Automation/"
dir_data <- "/Users/jaxinewolfe/Google Drive/STELLWAGEN/Data_Management/S4_Automation/data/"
dir_scripts <- "/Users/jaxinewolfe/Google Drive/STELLWAGEN/Data_Management/S4_Automation/R scripts/"
gistrack <- read_csv("/Users/jaxinewolfe/Google Drive/STELLWAGEN/Data_Management/S4_Automation/data/sbnms_v01.csv", header = T)
gistrack <- read_csv("/Users/jaxinewolfe/Google Drive/STELLWAGEN/Data_Management/S4_Automation/data/sbnms_v01.csv")
View(gistrack)
tracklength <- gistrack %>%
group_by(GPS_Trackline, Shape_Length) %>%
summarise(total_length = sum(Shape_Length))
unique(gistrack)
View(tracklength)
tracklength <- gistrack %>%
group_by(Area_Kevin, GPS_Trackline) %>%
summarise(total_length = sum(Shape_Length))
tracklength <- gistrack %>%
group_by(Area_Kevin, GPS_Trackline) %>%
summarise(total_length = sum(Shape_Length))
dir_working <- "/Users/jaxinewolfe/Google Drive/STELLWAGEN/Data_Management/S4_Automation/data/data_output/"
setwd(dir_working)
file_list <- list.files()
for (file in file_list){
# if the merged birddata doesn't exist, create it
if (!exists("birddata")){
birddata <- read_csv(file)
}
# if the merged dataset does exist, append to it
if (exists("birddata")){
# create temperary dataset to ammend the birddata
temp_dataset <-read_csv(file)
birddata <- rbind(birddata, temp_dataset[, colnames(birddata)])
birddata[is.na(birddata)] <- "NA" # convert empties to NA
rm(temp_dataset)
}
}
file_list
file_list[1]
file_list <- list.files()
source('~/Google Drive/STELLWAGEN/Data_Management/S4_Automation/R scripts/effort_correcting.R', echo=TRUE)
rm(list = ls())
library(tidyverse)
library(CCA)
library(lubridate)
library(vegan)
setwd("/Users/jaxinewolfe/Documents/Research/PEP/NESLTER/Data/LlopizLab/CCA")
dietdata <- read_csv("Forage_Fish_Diet_Data_2013_2015_Final.csv")
dietdata[is.na(dietdata)] <- 0 # convert empties to 0
diet.long <- dietdata %>%
gather(preytype,count,Centropages_spp:Unknown,factor_key = TRUE) %>%
filter(count != 0)
setwd("/Users/jaxinewolfe/Documents/Research/PEP/NESLTER/Data/LlopizLab/CCA/FSCSTables_SVSTA/")
file_list <- list.files()
FSCScols <- c("CRUISE6", "STATION", "EST_YEAR", "EST_MONTH", "EST_DAY", "EST_TIME",
"GMT_YEAR", "GMT_MONTH", "GMT_DAY", "GMT_TIME", "SURFTEMP", "BOTTEMP")
for (file in file_list){
# if the merged FSCSdataset doesn't exist, create it
if (!exists("FSCSdataset")){
FSCSdataset <- read_csv(file) %>%
select(FSCScols)
}
# if the merged dataset does exist, append to it
if (exists("FSCSdataset")){
# create temperary dataset to ammend the FSCSdataset
temp_dataset <-read_csv(file) %>%
select(FSCScols)
FSCSdataset <- rbind(FSCSdataset, temp_dataset[, colnames(FSCSdataset)])
FSCSdataset[is.na(FSCSdataset)] <- "NA" # convert empties to NA
rm(temp_dataset)
}
}
file list
file_list
for (file in file_list){
# if the merged FSCSdataset doesn't exist, create it
if (!exists("FSCSdataset")){
FSCSdataset <- read_csv(file) %>%
select(FSCScols)
}
# if the merged dataset does exist, append to it
if (exists("FSCSdataset")){
# create temperary dataset to ammend the FSCSdataset
temp_dataset <-read_csv(file) %>%
select(FSCScols)
FSCSdataset <- rbind(FSCSdataset, temp_dataset[, colnames(FSCSdataset)])
FSCSdataset[is.na(FSCSdataset)] <- "NA" # convert empties to NA
rm(temp_dataset)
}
}
for (file in file_list){
# if the merged FSCSdataset doesn't exist, create it
if (!exists("FSCSdataset")){
FSCSdataset <- read_csv(file) %>%
select(FSCScols)
}
# if the merged dataset does exist, append to it
if (exists("FSCSdataset")){
# create temperary dataset to ammend the FSCSdataset
temp_dataset <-read_csv(file) %>%
select(FSCScols)
FSCSdataset <- rbind(FSCSdataset, temp_dataset[, colnames(FSCSdataset)])
FSCSdataset[is.na(FSCSdataset)] <- "NA" # convert empties to NA
rm(temp_dataset)
}
}
library(tidyverse)
library(CCA)
library(lubridate)
library(vegan)
setwd("/Users/jaxinewolfe/Documents/Research/PEP/NESLTER/Data/LlopizLab/CCA")
setwd("/Users/jaxinewolfe/Documents/Research/PEP/NESLTER/Data/LlopizLab/CCA/FSCSTables_SVSTA/")
file_list <- list.files()
FSCScols <- c("CRUISE6", "STATION", "EST_YEAR", "EST_MONTH", "EST_DAY", "EST_TIME",
"GMT_YEAR", "GMT_MONTH", "GMT_DAY", "GMT_TIME", "SURFTEMP", "BOTTEMP")
for (file in file_list){
# if the merged FSCSdataset doesn't exist, create it
if (!exists("FSCSdataset")){
FSCSdataset <- read_csv(file) %>%
select(FSCScols)
}
# if the merged dataset does exist, append to it
if (exists("FSCSdataset")){
# create temperary dataset to ammend the FSCSdataset
temp_dataset <-read_csv(file) %>%
select(FSCScols)
FSCSdataset <- rbind(FSCSdataset, temp_dataset[, colnames(FSCSdataset)])
FSCSdataset[is.na(FSCSdataset)] <- "NA" # convert empties to NA
rm(temp_dataset)
}
}
for (file in file_list){
# if the merged FSCSdataset doesn't exist, create it
if (!exists("FSCSdataset")){
FSCSdataset <- read.csv(file, header = TRUE) %>%
select(FSCScols)
}
# if the merged dataset does exist, append to it
if (exists("FSCSdataset")){
# create temperary dataset to ammend the FSCSdataset
temp_dataset <-read.csv(file, header = TRUE) %>%
select(FSCScols)
FSCSdataset <- rbind(FSCSdataset, temp_dataset[, colnames(FSCSdataset)])
FSCSdataset[is.na(FSCSdataset)] <- "NA" # convert empties to NA
rm(temp_dataset)
}
}
rm(list = ls())
library(tidyverse)
library(CCA)
library(lubridate)
library(vegan)
setwd("/Users/jaxinewolfe/Documents/Research/PEP/NESLTER/Data/LlopizLab/CCA/FSCSTables_SVSTA/")
setwd("/Users/jaxinewolfe/Documents/Research/PEP/NESLTER/Data/LlopizLab/CCA/FSCSTables_SVSTA/")
file_list <- list.files()
FSCScols <- c("CRUISE6", "STATION", "EST_YEAR", "EST_MONTH", "EST_DAY", "EST_TIME",
"GMT_YEAR", "GMT_MONTH", "GMT_DAY", "GMT_TIME", "SURFTEMP", "BOTTEMP")
for (file in file_list){
# if the merged FSCSdataset doesn't exist, create it
if (!exists("FSCSdataset")){
FSCSdataset <- read.csv(file, header = TRUE) %>%
select(FSCScols)
}
# if the merged dataset does exist, append to it
if (exists("FSCSdataset")){
# create temperary dataset to ammend the FSCSdataset
temp_dataset <-read.csv(file, header = TRUE) %>%
select(FSCScols)
FSCSdataset <- rbind(FSCSdataset, temp_dataset[, colnames(FSCSdataset)])
FSCSdataset[is.na(FSCSdataset)] <- "NA" # convert empties to NA
rm(temp_dataset)
}
}
FSCS FSCScols
FSCScols
FSCScols <- c("CRUISE6", "STATION", "EST_YEAR", "EST_MONTH", "EST_DAY", "EST_TIME")
for (file in file_list){
# if the merged FSCSdataset doesn't exist, create it
if (!exists("FSCSdataset")){
FSCSdataset <- read.csv(file, header = TRUE) %>%
select(FSCScols)
}
# if the merged dataset does exist, append to it
if (exists("FSCSdataset")){
# create temperary dataset to ammend the FSCSdataset
temp_dataset <-read.csv(file, header = TRUE) %>%
select(FSCScols)
FSCSdataset <- rbind(FSCSdataset, temp_dataset[, colnames(FSCSdataset)])
FSCSdataset[is.na(FSCSdataset)] <- "NA" # convert empties to NA
rm(temp_dataset)
}
}
FSCScols <- c("CRUISE6", "STATION", "EST_YEAR", "EST_MONTH", "EST_DAY", "EST_TIME",
"GMT_YEAR", "GMT_MONTH", "GMT_DAY", "GMT_TIME", "SURFTEMP", "BOTTEMP")
FSCScols <- as.vector(CRUISE6, STATION, EST_YEAR, EST_MONTH, EST_DAY, EST_TIME)
FSCScols <- c(CRUISE6, STATION, EST_YEAR, EST_MONTH, EST_DAY, EST_TIME)
for (file in file_list){
# if the merged FSCSdataset doesn't exist, create it
if (!exists("FSCSdataset")){
FSCSdataset <- read.csv(file, header = TRUE) %>%
select(CRUISE6, STATION, EST_YEAR, EST_MONTH, EST_DAY, EST_TIME,
GMT_YEAR, GMT_MONTH, GMT_DAY, GMT_TIME, SURFTEMP, BOTTEMP)
}
# if the merged dataset does exist, append to it
if (exists("FSCSdataset")){
# create temperary dataset to ammend the FSCSdataset
temp_dataset <-read.csv(file, header = TRUE) %>%
select(CRUISE6, STATION, EST_YEAR, EST_MONTH, EST_DAY, EST_TIME,
GMT_YEAR, GMT_MONTH, GMT_DAY, GMT_TIME, SURFTEMP, BOTTEMP)
FSCSdataset <- rbind(FSCSdataset, temp_dataset[, colnames(FSCSdataset)])
FSCSdataset[is.na(FSCSdataset)] <- "NA" # convert empties to NA
rm(temp_dataset)
}
}
for (file in file_list){
# if the merged FSCSdataset doesn't exist, create it
if (!exists("FSCSdataset")){
FSCSdataset <- read.csv(file, header = TRUE)
FSCSdataset <- FSCSdataset %>%
select(CRUISE6, STATION, EST_YEAR, EST_MONTH, EST_DAY, EST_TIME,
GMT_YEAR, GMT_MONTH, GMT_DAY, GMT_TIME, SURFTEMP, BOTTEMP)
}
# if the merged dataset does exist, append to it
if (exists("FSCSdataset")){
# create temperary dataset to ammend the FSCSdataset
temp_dataset <-read.csv(file, header = TRUE)
temp_dataset <- temp_dataset %>%
select(CRUISE6, STATION, EST_YEAR, EST_MONTH, EST_DAY, EST_TIME,
GMT_YEAR, GMT_MONTH, GMT_DAY, GMT_TIME, SURFTEMP, BOTTEMP)
FSCSdataset <- rbind(FSCSdataset, temp_dataset[, colnames(FSCSdataset)])
FSCSdataset[is.na(FSCSdataset)] <- "NA" # convert empties to NA
rm(temp_dataset)
}
}
for (file in file_list){
# if the merged FSCSdataset doesn't exist, create it
if (!exists("FSCSdataset")){
FSCSdataset <- read.csv(file, header = TRUE)
# FSCSdataset <- FSCSdataset %>%
#   select(CRUISE6, STATION, EST_YEAR, EST_MONTH, EST_DAY, EST_TIME,
#          GMT_YEAR, GMT_MONTH, GMT_DAY, GMT_TIME, SURFTEMP, BOTTEMP)
}
# if the merged dataset does exist, append to it
if (exists("FSCSdataset")){
# create temperary dataset to ammend the FSCSdataset
temp_dataset <-read.csv(file, header = TRUE)
# temp_dataset <- temp_dataset %>%
#   select(CRUISE6, STATION, EST_YEAR, EST_MONTH, EST_DAY, EST_TIME,
#          GMT_YEAR, GMT_MONTH, GMT_DAY, GMT_TIME, SURFTEMP, BOTTEMP)
FSCSdataset <- rbind(FSCSdataset, temp_dataset[, colnames(FSCSdataset)])
FSCSdataset[is.na(FSCSdataset)] <- "NA" # convert empties to NA
rm(temp_dataset)
}
}
View(FSCSdataset)
rm(list = "FSCSdataset")
for (file in file_list){
# if the merged FSCSdataset doesn't exist, create it
if (!exists("FSCSdataset")){
FSCSdataset <- read.csv(file, header = TRUE)
FSCSdataset <- FSCSdataset %>%
select(CRUISE6, STATION, EST_YEAR, EST_MONTH, EST_DAY, EST_TIME,
GMT_YEAR, GMT_MONTH, GMT_DAY, GMT_TIME, SURFTEMP, BOTTEMP)
}
# if the merged dataset does exist, append to it
if (exists("FSCSdataset")){
# create temperary dataset to ammend the FSCSdataset
temp_dataset <-read.csv(file, header = TRUE)
temp_dataset <- temp_dataset %>%
select(CRUISE6, STATION, EST_YEAR, EST_MONTH, EST_DAY, EST_TIME,
GMT_YEAR, GMT_MONTH, GMT_DAY, GMT_TIME, SURFTEMP, BOTTEMP)
FSCSdataset <- rbind(FSCSdataset, temp_dataset[, colnames(FSCSdataset)])
FSCSdataset[is.na(FSCSdataset)] <- "NA" # convert empties to NA
rm(temp_dataset)
}
}
View(FSCSdataset)
FSCSdataset <- read.csv(file_list[1], header = TRUE) %>%
select(FSCScols)
FSCSdataset <- read.csv(file_list[1], header = TRUE)
FSCSdataset <- FSCSdataset %>% select(FSCScols)
FSCSdataset <- FSCSdataset %>% select(.,FSCScols)
FSCScols <- as.string(CRUISE6, STATION, EST_YEAR, EST_MONTH, EST_DAY, EST_TIME,
GMT_YEAR, GMT_MONTH, GMT_DAY, GMT_TIME, SURFTEMP, BOTTEMP)
FSCScols <- string(CRUISE6, STATION, EST_YEAR, EST_MONTH, EST_DAY, EST_TIME,
GMT_YEAR, GMT_MONTH, GMT_DAY, GMT_TIME, SURFTEMP, BOTTEMP)
FSCSdataset <- FSCSdataset %>% select(CRUISE6, STATION, EST_YEAR, EST_MONTH, EST_DAY, EST_TIME,
GMT_YEAR, GMT_MONTH, GMT_DAY, GMT_TIME, SURFTEMP, BOTTEMP)
detach("package:dplyr", unload=TRUE)
library("dplyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
FSCSdataset <- FSCSdataset %>% select(CRUISE6, STATION, EST_YEAR, EST_MONTH, EST_DAY, EST_TIME,
GMT_YEAR, GMT_MONTH, GMT_DAY, GMT_TIME, SURFTEMP, BOTTEMP)
FSCSdataset <- FSCSdataset %>% select(FSCScols)
"GMT_YEAR", "GMT_MONTH", "GMT_DAY", "GMT_TIME", "SURFTEMP", "BOTTEMP")
FSCScols <- c("CRUISE6", "STATION", "EST_YEAR", "EST_MONTH", "EST_DAY", "EST_TIME",
"GMT_YEAR", "GMT_MONTH", "GMT_DAY", "GMT_TIME", "SURFTEMP", "BOTTEMP")
rm(list = "FSCSdataset")
for (file in file_list){
# if the merged FSCSdataset doesn't exist, create it
if (!exists("FSCSdataset")){
FSCSdataset <- read.csv(file, header = TRUE) %>%
select(FSCScols)
}
# if the merged dataset does exist, append to it
if (exists("FSCSdataset")){
# create temporary dataset to ammend the FSCSdataset
temp_dataset <-read.csv(file, header = TRUE) %>%
select(FSCScols)
FSCSdataset <- rbind(FSCSdataset, temp_dataset[, colnames(FSCSdataset)])
FSCSdataset[is.na(FSCSdataset)] <- "NA" # convert empties to NA
rm(temp_dataset)
}
}
unique(FSCSdataset)
test <- unique(FSCSdataset)
for (i in 2:length(file_list)){
FSCSdataset <- read.csv(file_list[1], header = TRUE) %>%
select(FSCScols)
# if the merged dataset does exist, append to it
# create temporary dataset to ammend the FSCSdataset
temp_dataset <-read.csv(file_list[i], header = TRUE) %>%
select(FSCScols)
FSCSdataset <- rbind(FSCSdataset, temp_dataset[, colnames(FSCSdataset)])
FSCSdataset[is.na(FSCSdataset)] <- "NA" # convert empties to NA
rm(temp_dataset)
}
setwd("/Users/jaxinewolfe/Documents/Research/PEP/NESLTER/Data/LlopizLab/CCA")
dietdata <- read_csv("Forage_Fish_Diet_Data_2013_2015_Final.csv")
dietdata[is.na(dietdata)] <- 0 # convert empties to 0
rm(list= "test")
dietdata$Time <- format(as.POSIXct(str_pad(dietdata$Time, 4, pad = "0"),
format="%H%M", origin = ""), "%H:%M")
View(dietdata)
library("stringr", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
dietdata$Time <- format(as.POSIXct(str_pad(dietdata$Time, 4, pad = "0"),
format="%H%M", origin = ""), "%H:%M")
diet_join <- unique(left_join(x = dietdata, y = FSCSdataset,
by = c("Cruise" = "CRUISE6", "Station" = "STATION")))
diet_join <- left_join(x = dietdata, y = FSCSdataset,
by = c("Cruise" = "CRUISE6", "Station" = "STATION"))
diet_join <- unique(left_join(x = dietdata, y = FSCSdataset,
by = c("Cruise" = "CRUISE6", "Station" = "STATION")))
missing <- diet_join[is.na(diet_join$EST_DAY),]
diet_join$GMT_datetime <- with(diet_join, ymd_hms(paste(GMT_YEAR, GMT_MONTH, GMT_DAY, GMT_TIME, sep= ' '),
tz = ""))
diet_join$EST_datetime <- with(diet_join, ymd_hms(paste(EST_YEAR, EST_MONTH, EST_DAY, EST_TIME, sep= ' '),
tz = ""))
View(diet_join)
diet_join <- diet_join[complete.cases(diet_join[ , "datetime"]),]
diet_join <- diet_join[complete.cases(diet_join[ , "GMT_datetime"]),]
daynight <- function(x) {
crds <- SpatialPoints(matrix(c(x$Longitude, x$Latitude), ncol = 2, byrow = TRUE),
proj4string=CRS("+proj=longlat +datum=WGS84"))
ts <- x$datetime
sunrise <- sunriset(crds, ts, POSIXct.out = TRUE,
direction = "sunrise")$time
sunset <- sunriset(crds, ts, POSIXct.out = TRUE,
direction = "sunset")$time
# use 'ifelse'  to create vector indicating day vs. night based on sunrise and sunset
daynight <- ifelse(ts >= sunrise & ts <= sunset,
yes = "Day", no = "Night")
print(sunrise)
print(sunset)
return(daynight)
}
diet_join$day_night <- daynight(diet_join)
daynight <- function(x) {
crds <- SpatialPoints(matrix(c(x$Longitude, x$Latitude), ncol = 2, byrow = TRUE),
proj4string=CRS("+proj=longlat +datum=WGS84"))
ts <- x$GMT_datetime
sunrise <- sunriset(crds, ts, POSIXct.out = TRUE,
direction = "sunrise")$time
sunset <- sunriset(crds, ts, POSIXct.out = TRUE,
direction = "sunset")$time
# use 'ifelse'  to create vector indicating day vs. night based on sunrise and sunset
daynight <- ifelse(ts >= sunrise & ts <= sunset,
yes = "Day", no = "Night")
print(sunrise)
print(sunset)
return(daynight)
}
diet_join$day_night <- daynight(diet_join)
mia_daynight <- diet_join[is.na(diet_join$day_night),]
View(mia_daynight)
write_csv(mia_daynight,"daynight_NAs.csv")
knitr::opts_chunk$set(echo = TRUE)
library(taxize)
install.packages(taxize)
install.packages("taxize")
install.packages("taxize")
knitr::opts_chunk$set(echo = TRUE)
library(taxize)
install.packages("taxize")
library(worrms)
install.packages(worrms)
install.packages("worrms")
library("worrms", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
install.packages("taxize")
library(taxize)
install.packages("taxize")
rm(list=ls())
getwd()
setwd("/Users/jaxinewolfe/Documents/Research/PEP/NESLTER/Data/LlopizLab/Abundance/namespace_validation/")
install.packages("taxize")
install.packages('*taxize', dependencies = TRUE)
install.packages('taxize', dependencies = TRUE)
R.Version()
